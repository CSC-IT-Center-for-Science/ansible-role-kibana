---
  - name: skip extracting files if this version already installed
    stat: path={{ kibana4_path }}
    register: kibana4path

  - name: add logstash-web-kibana4 init script
    template: src={{ kibana4_init_script }} dest=/etc/init.d/logstash-web-kibana4 owner=root group=root mode=0755 backup=yes
    register: addkibana4initscript
    when: ansible_distribution_major_version == "6"

  - name: add kibana4.service systemd EL7
    template: src=kibana4.service dest=/etc/systemd/system/kibana4.service
    when: ansible_distribution_major_version == "7"

  - name: chkconfig --add logstash-web-kibana4
    command: chkconfig --add logstash-web-kibana4
    when: ansible_distribution_major_version == "6" and addkibana4initscript.changed

  - name: copy in and unpack kibana4 if kibana4_send_tarball is True
    unarchive: src=files/kibana-{{ kibana4_version }}.tar.gz 
               dest=/opt/
               owner=logstash
               group=csc
    when: kibana4path.stat.exists == False and kibana4_send_tarball

  - name: get_url and unpack kibana4 if kibana4_send_tarball is False
    unarchive: src={{ kibana4_download_url }}/kibana-{{ kibana4_version }}.tar.gz
               dest=/opt/
               owner=logstash
               group=csc
               copy=no
    when: kibana4path.stat.exists == False and kibana4_send_tarball == False

  - name: set permissions and ownerships
    file:      path=/opt/kibana-{{kibana4_version}}
               owner=logstash
               group=csc
               recurse=yes

  - name: symlink /opt/kibana4 to /opt/current kibana version
    file: src={{ kibana4_path }} dest={{ kibana4_symlink }} state=link

  - name: send in kibana4's config.yml
    template: src={{ kibana4_config_yml }} dest={{ kibana4_symlink }}/config/kibana.yml owner=logstash group=csc mode=0644 backup=yes
    register: reg_kibana4_config_file

  - name: grab cluster health
    action: uri url=http://localhost:{{ es_http_port }}/_cluster/health return_content=yes
    register: clusterhealth

  - name: Display cluster health
    debug: var=clusterhealth

  - name: install kibana4 plugin show no process, timeout after 30s
    command: /opt/kibana4/bin/kibana plugin -s -t 30 -i {{ item }}
    when: kibana4_plugins.0 != ""
    with_items: kibana4_plugins
    register: kibana4_plugin_install
    ignore_errors: True

  - name: Display kibana_plugin_install
    debug: var=kibana4_plugin_install

# Why does this return code 2 even though it is "started"?
  - name: start logstash-web-kibana4 service
    service: name=logstash-web-kibana4 enabled=yes state=started
    when: ansible_distribution_major_version == "6"
    ignore_errors: true

  - name: start kibana4 service EL7
    service: name=kibana4 enabled=yes state=started
    when: ansible_distribution_major_version == "7"

  - name: restart kibana4 service EL7 if plugin was installed
    service: name=kibana4 state=restarted
    when: ansible_distribution_major_version == "7" and kibana4_plugin_install.changed and kibana4_plugin_install.failed != True

  - name: restart kibana4 service EL7 if config changed
    service: name=kibana4 state=restarted
    when: ansible_distribution_major_version == "7" and reg_kibana4_config_file.changed
